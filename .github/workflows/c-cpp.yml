name: String CI

on:
  push:
    branches: [ master, CI-windows-icu]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: windows-latest
            triplet: x64-windows
            vcpkgCommitId: 'd47570b8d615abfaa1e31f612d65d89a05815ad9'
            vcpkgPackages: 'icu'
          - os: ubuntu-latest
            triplet: x64-linux
            vcpkgCommitId: 'd47570b8d615abfaa1e31f612d65d89a05815ad9'
            vcpkgPackages: 'icu'
          - os: macos-latest
            triplet: x64-osx
            vcpkgCommitId: 'd47570b8d615abfaa1e31f612d65d89a05815ad9'
            vcpkgPackages: 'icu'  
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: lukka/get-cmake@latest
    - name: dir
      if: startsWith(matrix.os,'windows')
      run: find $RUNNER_WORkSPACE
      shell: bash
    - name: Restore artifacts or run vcpkg; build and cache artifacts
      uses: lukka/run-vcpkg@ensure_cachedir_exists
      if: startsWith(matrix.os,'windows')
      id: runvcpkg
      with:
        vcpkgArguments: '${{ matrix.vcpkgPackages }}'
        vcpkgTriplet: '${{ matrix.triplet }}'
        vcpkgDirectory: '${{ runner.workspace }}\b\vcpkg'
        vcpkgGitCommitId: '${{ matrix.vcpkgCommitId }}'
    - name: dir
      run: find $RUNNER_WORKSPACE
      shell: bash
    - name: Prints output of run-vcpkg task
      run: echo "'${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}' '${{  steps.runvcpkg.outputs.RUNVCPKG_VCPKG_TRIPLET_OUT }}' "
      shell: bash
      if: startsWith(matrix.os,'windows')
    - name: set env
      run: echo '::set-env name=VCPKG_INSTALLATION_ROOT::${{ runner.workspace }}\b\vcpkg'
      if: startsWith(matrix.os,'windows')
      
    - name: configure
      run: mkdir build && cd build && cmake ..

    - name: build
      run: cmake --build build --config Release
    
    - name: Artifacts     
      if: startsWith(matrix.os,'windows')  != true
      uses: actions/upload-artifact@v1
      with:
        name: Upload Artifacts
        path: build/
    - name: Upload Artifacts Windows    
      if: startsWith(matrix.os,'windows') 
      uses: actions/upload-artifact@v1
      with:
        name: Artifacts
        path: build/Release/
